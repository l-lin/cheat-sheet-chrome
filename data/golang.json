[
    {
        "default": true,
        "name:": "golang",
        "description": "Golang",
        "url": "http://golang.org/pkg/%s"
    },
    {
        "name": "effectivego",
        "description": "Effective Go",
        "url": "http://golang.org/doc/effective_go.html#%s",
        "data": [
            {"content": "golang:effectivego:formatting", "description": "Effective Go - Formatting"},
            {"content": "golang:effectivego:commentary", "description": "Effective Go - Commentary"},
            {"content": "golang:effectivego:names", "description": "Effective Go - Names"},
            {"content": "golang:effectivego:package-names", "description": "Effective Go - Package names"},
            {"content": "golang:effectivego:getters", "description": "Effective Go - Getters"},
            {"content": "golang:effectivego:interface-names", "description": "Effective Go - Interface names"},
            {"content": "golang:effectivego:mixed-caps", "description": "Effective Go - Mixed caps"},
            {"content": "golang:effectivego:semicolons", "description": "Effective Go - Semicolons"},
            {"content": "golang:effectivego:control-structures", "description": "Effective Go - Control structures"},
            {"content": "golang:effectivego:If", "description": "Effective Go - If"},
            {"content": "golang:effectivego:redeclaration", "description": "Effective Go - Redeclaration and reassignment"},
            {"content": "golang:effectivego:for", "description": "Effective Go - For"},
            {"content": "golang:effectivego:switch", "description": "Effective Go - Switch"},
            {"content": "golang:effectivego:type_switch", "description": "Effective Go - Type switch"},
            {"content": "golang:effectivego:functions", "description": "Effective Go - functions"},
            {"content": "golang:effectivego:multiple-return", "description": "Effective Go - Multiple return values"},
            {"content": "golang:effectivego:named-result", "description": "Effective Go - Named result parameters"},
            {"content": "golang:effectivego:defer", "description": "Effective Go - Defer"},
            {"content": "golang:effectivego:data", "description": "Effective Go - Data"},
            {"content": "golang:effectivego:allocation_new", "description": "Effective Go - Allocation with new"},
            {"content": "golang:effectivego:composite_literals", "description": "Effective Go - Constructors and composite literals"},
            {"content": "golang:effectivego:allocation_make", "description": "Effective Go - Allocation with make"},
            {"content": "golang:effectivego:arrays", "description": "Effective Go - Arrays"},
            {"content": "golang:effectivego:slices", "description": "Effective Go - Slices"},
            {"content": "golang:effectivego:two_dimensional_slices", "description": "Effective Go - Two-dimensional slices"},
            {"content": "golang:effectivego:maps", "description": "Effective Go - Maps"},
            {"content": "golang:effectivego:printing", "description": "Effective Go - Printing"},
            {"content": "golang:effectivego:append", "description": "Effective Go - Append"},
            {"content": "golang:effectivego:initialization", "description": "Effective Go - Initialization"},
            {"content": "golang:effectivego:constants", "description": "Effective Go - Constants"},
            {"content": "golang:effectivego:variables", "description": "Effective Go - Variables"},
            {"content": "golang:effectivego:init", "description": "Effective Go - The init function"},
            {"content": "golang:effectivego:methods", "description": "Effective Go - Methods"},
            {"content": "golang:effectivego:pointers_vs_values", "description": "Effective Go - Pointers vs. Values"},
            {"content": "golang:effectivego:interfaces_and_types", "description": "Effective Go - Interfaces and other types"},
            {"content": "golang:effectivego:interfaces", "description": "Effective Go - Interfaces"},
            {"content": "golang:effectivego:conversions", "description": "Effective Go - Conversions"},
            {"content": "golang:effectivego:interface_conversions", "description": "Effective Go - Interface conversions and type assertions"},
            {"content": "golang:effectivego:generality", "description": "Effective Go - Generality"},
            {"content": "golang:effectivego:interfaces_methods", "description": "Effective Go - Interfaces and methods"},
            {"content": "golang:effectivego:blank", "description": "Effective Go - The blank identifier"},
            {"content": "golang:effectivego:blank_assign", "description": "Effective Go - The blank identifier in multiple assignment"},
            {"content": "golang:effectivego:blank_unused", "description": "Effective Go - Unused imports and variables"},
            {"content": "golang:effectivego:blank_import", "description": "Effective Go - Import for side effect"},
            {"content": "golang:effectivego:blank_implements", "description": "Effective Go - Interface checks"},
            {"content": "golang:effectivego:embedding", "description": "Effective Go - Embedding"},
            {"content": "golang:effectivego:concurrency", "description": "Effective Go - Concurrency"},
            {"content": "golang:effectivego:sharing", "description": "Effective Go - Share by communicating"},
            {"content": "golang:effectivego:goroutines", "description": "Effective Go - Goroutines"},
            {"content": "golang:effectivego:channels", "description": "Effective Go - Channels"},
            {"content": "golang:effectivego:chan_of_chan", "description": "Effective Go - Channels of channels"},
            {"content": "golang:effectivego:parallel", "description": "Effective Go - Parallelization"},
            {"content": "golang:effectivego:leaky_buffer", "description": "Effective Go - A leaky buffer"},
            {"content": "golang:effectivego:errors", "description": "Effective Go - Errors"},
            {"content": "golang:effectivego:panic", "description": "Effective Go - Panic"},
            {"content": "golang:effectivego:recover", "description": "Effective Go - Recover"},
            {"content": "golang:effectivego:web_server", "description": "Effective Go - A web server"}
        ]
    },
    {
        "name": "gobyexample",
        "description": "Go by example",
        "url": "https://gobyexample.com/%s",
        "dataUrl": "https://raw.githubusercontent.com/mmcgrana/gobyexample/master/examples.txt",
        "dataParser": "text2lowercase"
    },
    {
        "name": "essentialgo",
        "description": "Essential Go",
        "url": "https://github.com/codegangsta/essential-go/blob/master/%s/main.go",
        "dataUrl": "https://api.github.com/repos/codegangsta/essential-go/contents/",
        "dataParser": "github"
    }
]
